<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.superCode.dao.UsersDAO">
    <resultMap type="com.superCode.entity.Users" id="usersMap">
        <id property="usersid" column="usersid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="realname" column="realname"/>
        <result property="sex" column="sex"/>
        <result property="createdate" column="createdate"/>
        <result property="contact" column="contact"/>
        <result property="image" column="image"/>
        <result property="regdate" column="regdate"/>
        <result property="address" column="address"/>
        <result property="iscooled" column="iscooled"/>
    </resultMap>
    <!-- 插入语句 DAO通过id调用此配置 -->
    <insert id="insert" parameterType="users">
insert into users(
username  , password  , realname  , sex  , createdate  , contact  , image  ,
regdate, college, major, address , iscooled,
`qq`, `idcard`, `email`, `contract_info0`, `contract_info1`, `contract_info2`, `contract_info3`, `contract_info4`, `contract_info5`, `contract_info6`

 )
values( #{username}   , #{password}   , #{realname}   , #{sex}   , #{createdate}   , #{contact}   , #{image}   ,
 #{regdate}, #{college}, #{major} , #{address}, 0
 , #{qq}, #{idcard}, #{email}, #{contract_info0}, #{contract_info1}, #{contract_info2}, #{contract_info3}, #{contract_info4}, #{contract_info5}, #{contract_info6}

 )
</insert>
    <!-- 更新语句 DAO通过id调用此配置 -->
    <update id="update" parameterType="users">
update users set  username=#{username}  , password=#{password}  , realname=#{realname}  , sex=#{sex}  ,
createdate=#{createdate}  , contact=#{contact}  , image=#{image}  , college=#{college}  , major=#{major}, address=#{address}  ,
regdate=#{regdate},
iscooled=#{iscooled},
 qq=#{qq},idcard=#{idcard},email=#{email},contract_info0=#{contract_info0},contract_info1=#{contract_info1},contract_info2=#{contract_info2},contract_info3=#{contract_info3},contract_info4=#{contract_info4},contract_info5=#{contract_info5},contract_info6=#{contract_info6}


 where usersid=#{usersid}
</update>

    <!-- 按主键删除 DAO通过id调用此配置 -->
    <delete id="delete" parameterType="String">
delete from users where usersid = #{usersid}
</delete>
    <!-- 查询全部信息 DAO通过id调用此配置  -->
    <select id="getAll" parameterType="map" resultMap="usersMap">
        select * from users
        where 1=1
        <if test="keyword != null and keyword != ''">
            and
            (
            users.username like CONCAT('%',#{keyword},'%') or
            users.realname like CONCAT('%',#{keyword},'%')

            )
        </if>

        order by usersid desc
        <if test="(start != null and start != '') or start==0 ">
            <if test=" limit != null and limit != ''">
                limit #{start},#{limit}
            </if>
        </if>

    </select>

    <!-- 统计 获取 总数    用于分页-->
    <select id="getRowSize" parameterType="map" resultType="int">
        select count(1) from users
        where 1=1
        <if test="keyword != null and keyword != ''">
            and
            (
            users.username like CONCAT('%',#{keyword},'%') or
            users.realname like CONCAT('%',#{keyword},'%')

            )
        </if>


    </select>
    <!-- 按主键查询 DAO通过id调用此配置  -->
    <select id="getById" parameterType="String" resultMap="usersMap">
select a.* from users a where usersid=#{usersid} order by usersid desc
</select>
    <!-- 按条件精确查询 DAO通过id调用此配置  -->
    <select id="getByCond" parameterType="users" resultMap="usersMap">
        select a.* from users a where 1=1
        <if test="username != null and '' != username">
            and a.username = #{username}
        </if>
        <if test="password != null and '' != password">
            and a.password = #{password}
        </if>
        <if test="realname != null and '' != realname">
            and a.realname = #{realname}
        </if>
        <if test="sex != null and '' != sex">
            and a.sex = #{sex}
        </if>
        <if test="createdate != null and '' != createdate">
            and a.createdate = #{createdate}
        </if>
        <if test="contact != null and '' != contact">
            and a.contact = #{contact}
        </if>
        <if test="image != null and '' != image">
            and a.image = #{image}
        </if>
        <if test="regdate != null and '' != regdate">
            and a.regdate = #{regdate}
        </if>
    </select>
    <!-- 按条件模糊查询 DAO通过id调用此配置  -->
    <select id="getByLike" parameterType="users" resultMap="usersMap">
        select a.* from users a where 1=1
        <if test="username != null and '' != username">
            and a.username like CONCAT('%', CONCAT(#{username}, '%'))
        </if>
        <if test="password != null and '' != password">
            and a.password like CONCAT('%', CONCAT(#{password}, '%'))
        </if>
        <if test="realname != null and '' != realname">
            and a.realname like CONCAT('%', CONCAT(#{realname}, '%'))
        </if>
        <if test="sex != null and '' != sex">
            and a.sex like CONCAT('%', CONCAT(#{sex}, '%'))
        </if>
        <if test="createdate != null and '' != createdate">
            and a.createdate like CONCAT('%', CONCAT(#{createdate}, '%'))
        </if>
        <if test="contact != null and '' != contact">
            and a.contact like CONCAT('%', CONCAT(#{contact}, '%'))
        </if>
        <if test="image != null and '' != image">
            and a.image like CONCAT('%', CONCAT(#{image}, '%'))
        </if>
        <if test="regdate != null and '' != regdate">
            and a.regdate like CONCAT('%', CONCAT(#{regdate}, '%'))
        </if>
    </select>
</mapper>


